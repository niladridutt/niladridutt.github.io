<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Niladri Shekhar Dutt</title>
    <link>https://niladridutt.com/</link>
    <description>Recent content on Niladri Shekhar Dutt</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 06 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://niladridutt.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://niladridutt.com/posts/2014/09/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://niladridutt.com/posts/2014/09/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&#39;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&#39;t cover using CSS to style your theme.
We&#39;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://niladridutt.com/posts/2014/03/migrate-to-hugo-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://niladridutt.com/posts/2014/03/migrate-to-hugo-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&#39;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://niladridutt.com/about/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://niladridutt.com/about/</guid>
      <description>&amp;gt; Hello world!  I&#39;m fascinated by AI and I like building architectures that exhibit “intelligence” and deploy novel models to solve real world problems. My research interests lie in the field of Deep Learning and its applications in Computer Vision and NLP, and fairness in Machine Learning. Updates  I recently received a travel grant to deliver a talk at PyCon Taiwan&amp;#39;19 on &amp;lsquo;Probabilistic Programming using TensorFlow Probability&amp;rsquo; (September 21, 2019) Won the &amp;lsquo;Best Social Hack&amp;rsquo; at LA Hacks 2019 hosted by UCLA (Major League HAcking) Won the 2nd Runners-up award at San Francisco (SF) Hacks 2019 (Major League Hacking) Won the &amp;lsquo;Best Utility Hack&amp;rsquo; at DeveloperWeek Hackathon 2019 (America&#39;s largest challenge driven hackathon)  When I don&#39;t code &amp;lt;/&amp;gt;, I write snippets.</description>
    </item>
    
    <item>
      <title>Experience</title>
      <link>https://niladridutt.com/experience/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://niladridutt.com/experience/</guid>
      <description>Nvidia Corporation Research Intern | Jan 2020 - Present
 Working on fairness in computer vision systems   CITRIS Policy Lab, UC Berkeley
Undergraduate researcher | Supervisor : Dr.Brandie Nonnecke | Feb 2019 - Present
 Using machine learning to find how political tweets propagate and inuence elections. Improved topic coherence by using topic modeling after clustering based on social network analysis Presented research to senators in Washington, D.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://niladridutt.com/posts/2014/04/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://niladridutt.com/posts/2014/04/hugo-template-primer/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://niladridutt.com/posts/2014/04/getting-started-with-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://niladridutt.com/posts/2014/04/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>